>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

>>> matr_1 = [[2, 4, 6], [2, 4, 6], [2, 4, 6]]

Checks output for correct arguments
>>> matrix_divided(matr_1, 3)
[[0.67, 1.33, 2.0], [0.67, 1.33, 2.0], [0.67, 1.33, 2.0]]

Checks matrix element is int or float, matrix is list otherwise raise TypeError
>>> matr_type = [[1, 2, '3'], ['a', 3, '4'], {1: '2', 3: 'e', 2: 0}]
>>> matrix_divided(matr_type, 3) # doctest: +ELLIPSIS
Traceback (most recent call last):
	---
TypeError: matrix must be a matrix (list of lists) of integers/floats

Checks rows of matrix are equal otherwise TypeError
>>> matr_row = [[2, 4, 6], [5, 9], [8, 10, 14]]
>>> matrix_divided(matr_row, 5) # doctest: +ELLIPSIS
Traceback (most recent call last):
	---
TypeError: Each row of the matrix must have the same size

Checks div is float/integer otherwise raise TypeError
>>> matrix_divided(matr_1, '123') # doctest: +ELLIPSIS
Traceback (most recent call last):
	---
TypeError: div must be a number

Checks if div is not zero otherwise raise ZeroDivisionError
>>> matrix_divided(matr_1, 0) # doctest: +ELLIPSIS
Traceback (most recent call last):
	---
ZeroDivisionError: division by zero
